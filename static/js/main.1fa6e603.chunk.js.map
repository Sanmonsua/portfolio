{"version":3,"sources":["data.js","mockData.js","components/Navbar.js","components/Header.js","components/About.js","components/Modal.js","components/ProjectDetail.js","components/Project.js","components/Portfolio.js","App.js","serviceWorker.js","index.js"],"names":["headerData","name","description","aboutData","info","projects","summary","website","githubUrl","primaryLanguage","libraries","images","resolutions","micro","url","thumbnail","displayName","languages","Navbar","id","className","href","title","Header","props","About","src","alt","modalRoot","document","getElementById","Modal","children","elRef","useRef","current","createElement","useEffect","appendChild","removeChild","createPortal","ProjectDetail","onClose","project","style","height","position","tabIndex","onClick","Project","data","useState","showModal","setShowModal","Portfolio","map","p","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1fa6e603.chunk.js","sourcesContent":["export const headerData = {\r\n\tname: 'Santiago Montoya',\r\n\tdescription:\r\n\t\t'Coffee lover from Colombia. â˜• Focused on creating web applications and data-based solutions. Looking forward to build better projects.',\r\n}\r\n\r\nexport const aboutData = {\r\n\tinfo:\r\n\t\t'Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam remaperiam, eaque ipsa quae ab illo inventore veritatis etquasi architecto beatae vitae dicta sunt explicabo. Nemoenim ipsam voluptatem quia voluptas sit aspernatur autodit aut fugit, sed quia consequuntur magni dolores eosqui ratione voluptatem sequi nesciunt. Neque porroquisquam est, qui dolorem ipsum quia dolor sit amet,consectetur, adipisci velit, sed quia non numquam eiusmodi tempora incidunt ut labore et dolore magnam aliquamquaerat voluptatem. Ut enim ad minima veniam, quisnostrum exercitationem ullam corporis suscipitlaboriosam.',\r\n}\r\n","export const projects = [\r\n\t{\r\n\t\tname: 'pets-adoption-app',\r\n\t\tsummary:\r\n\t\t\t'React native app for displaying information about pets that are in adoption. I used the Pet Finder API.',\r\n\t\twebsite: 'https://expo.io/@sanmonsua/projects/adopt-me',\r\n\t\tgithubUrl: 'https://github.com/Sanmonsua/pets-adoption-app',\r\n\t\tprimaryLanguage: 'JavaScript',\r\n\t\tlibraries: ['React'],\r\n\t\timages: [\r\n\t\t\t{\r\n\t\t\t\tresolutions: {\r\n\t\t\t\t\tmicro: {\r\n\t\t\t\t\t\turl:\r\n\t\t\t\t\t\t\t'https://project-images.gitconnectedcontent.com/c640def7-b4ad-4803-9397-477e02a21582-micro',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthumbnail: {\r\n\t\t\t\t\t\turl:\r\n\t\t\t\t\t\t\t'https://project-images.gitconnectedcontent.com/ba7621d0-d386-4dfe-8cae-8d3b0f691fc3-desktop',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n\t{\r\n\t\tname: 'task-management',\r\n\t\tdisplayName: 'task-management',\r\n\t\tsummary:\r\n\t\t\t'React native task management app built using redux. It uses firebase for user authentication and database.',\r\n\t\twebsite: 'https://expo.io/@sanmonsua/tasks-io',\r\n\t\tgithubUrl: 'https://github.com/Sanmonsua/task-management',\r\n\t\tprimaryLanguage: 'JavaScript',\r\n\t\tlanguages: ['JavaScript'],\r\n\t\tlibraries: ['React Native'],\r\n\t\timages: [\r\n\t\t\t{\r\n\t\t\t\tresolutions: {\r\n\t\t\t\t\tmicro: {\r\n\t\t\t\t\t\turl:\r\n\t\t\t\t\t\t\t'https://project-images.gitconnectedcontent.com/c640def7-b4ad-4803-9397-477e02a21582-micro',\r\n\t\t\t\t\t},\r\n\t\t\t\t\tthumbnail: {\r\n\t\t\t\t\t\turl:\r\n\t\t\t\t\t\t\t'https://project-images.gitconnectedcontent.com/c640def7-b4ad-4803-9397-477e02a21582-thumbnail',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t},\r\n]\r\n","import React from 'react'\r\n\r\nexport default function Navbar() {\r\n\treturn (\r\n\t\t<nav id=\"nav-wrap\">\r\n\t\t\t<a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">\r\n\t\t\t\tShow navigation\r\n\t\t\t</a>\r\n\t\t\t<a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">\r\n\t\t\t\tHide navigation\r\n\t\t\t</a>\r\n\t\t\t<ul id=\"nav\" className=\"nav\">\r\n\t\t\t\t<li className=\"current\">\r\n\t\t\t\t\t<a className=\"smoothscroll\" href=\"#home\">\r\n\t\t\t\t\t\tHome\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a className=\"smoothscroll\" href=\"#about\">\r\n\t\t\t\t\t\tAbout\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a className=\"smoothscroll\" href=\"#portfolio\">\r\n\t\t\t\t\t\tPortfolio\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<a className=\"smoothscroll\" href=\"#contact\">\r\n\t\t\t\t\t\tContact\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nimport Navbar from './Navbar'\r\n\r\nexport default function Header(props) {\r\n\tvar { name, description } = props\r\n\treturn (\r\n\t\t<header id=\"home\">\r\n\t\t\t<Navbar />\r\n\t\t\t<div className=\"row banner\">\r\n\t\t\t\t<div className=\"banner-text\">\r\n\t\t\t\t\t<h1 className=\"responsive-headline\">I'm {name}.</h1>\r\n\t\t\t\t\t<h3>{description}</h3>\r\n\t\t\t\t\t<hr />\r\n\t\t\t\t\t<ul className=\"social\">\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-github\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a href=\"#\">\r\n\t\t\t\t\t\t\t\t<i className=\"fa fa-linkedin\" />\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<p className=\"scrolldown\">\r\n\t\t\t\t<a className=\"smoothscroll\" href=\"#about\">\r\n\t\t\t\t\t<i className=\"icon-down-circle\" />\r\n\t\t\t\t</a>\r\n\t\t\t</p>\r\n\t\t</header>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About({ info }) {\r\n\treturn (\r\n\t\t<section id=\"about\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"three columns\">\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclassName=\"profile-pic\"\r\n\t\t\t\t\t\tsrc=\"images/profilepic.jpg\"\r\n\t\t\t\t\t\talt=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"nine columns main-col\">\r\n\t\t\t\t\t<h2>About Me</h2>\r\n\t\t\t\t\t<p>{info}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { createPortal } from 'react-dom'\r\n\r\nconst modalRoot = document.getElementById('modal')\r\n\r\nconst Modal = ({ children }) => {\r\n\tconst elRef = useRef(null)\r\n\tif (!elRef.current) {\r\n\t\telRef.current = document.createElement('div')\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tmodalRoot.appendChild(elRef.current)\r\n\t\treturn () => modalRoot.removeChild(elRef.current)\r\n\t}, [])\r\n\r\n\treturn createPortal(<div>{children}</div>, elRef.current)\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nexport default function ProjectDetail({ onClose, project }) {\r\n\tvar {\r\n\t\tname,\r\n\t\tsummary,\r\n\t\timages: [\r\n\t\t\t{\r\n\t\t\t\tresolutions: {\r\n\t\t\t\t\tthumbnail: { url },\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t} = project\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"mfp-bg mfp-fade mfp-ready\"\r\n\t\t\t\tstyle={{ height: '6925px', position: 'absolute' }}\r\n\t\t\t/>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"mfp-wrap mfp-auto-cursor mfp-fade mfp-ready\"\r\n\t\t\t\ttabIndex={-1}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: '539px',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"mfp-container mfp-s-ready mfp-inline-holder\">\r\n\t\t\t\t\t<div className=\"mfp-content\">\r\n\t\t\t\t\t\t<div className=\"popup-modal\">\r\n\t\t\t\t\t\t\t<img className=\"scale-with-grid\" src={url} alt=\"\" />\r\n\t\t\t\t\t\t\t<div className=\"description-box\">\r\n\t\t\t\t\t\t\t\t<h4>{name}</h4>\r\n\t\t\t\t\t\t\t\t<p>{summary}</p>\r\n\t\t\t\t\t\t\t\t<span className=\"categories\">\r\n\t\t\t\t\t\t\t\t\t<i className=\"fa fa-tag\" />\r\n\t\t\t\t\t\t\t\t\tBranding, Webdesign\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"link-box\">\r\n\t\t\t\t\t\t\t\t<a href=\"http://www.behance.net\">Details</a>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={onClose}\r\n\t\t\t\t\t\t\t\t\tclassName=\"popup-modal-dismiss\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tClose\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport Modal from './Modal'\r\nimport ProjectDetail from './ProjectDetail'\r\n\r\nexport default function Project({ data = {} }) {\r\n\tvar {\r\n\t\tname,\r\n\t\tprimaryLanguage,\r\n\t\timages: [\r\n\t\t\t{\r\n\t\t\t\tresolutions: {\r\n\t\t\t\t\tthumbnail: { url },\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t} = data\r\n\r\n\tvar [showModal, setShowModal] = useState(false)\r\n\r\n\tfunction onShowDetails() {\r\n\t\tsetShowModal(true)\r\n\t}\r\n\r\n\tfunction onCloseModal() {\r\n\t\tsetShowModal(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"columns portfolio-item\">\r\n\t\t\t<div className=\"item-wrap\">\r\n\t\t\t\t<button onClick={onShowDetails}>\r\n\t\t\t\t\t<img alt=\"\" src={url} />\r\n\t\t\t\t\t<div className=\"overlay\">\r\n\t\t\t\t\t\t<div className=\"portfolio-item-meta\">\r\n\t\t\t\t\t\t\t<h5>{name}</h5>\r\n\t\t\t\t\t\t\t<p>{primaryLanguage}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"link-icon\">\r\n\t\t\t\t\t\t<i className=\"icon-plus\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{showModal && (\r\n\t\t\t\t<Modal>\r\n\t\t\t\t\t<ProjectDetail onClose={onCloseModal} project={data} />\r\n\t\t\t\t</Modal>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\n\r\nimport Project from './Project'\r\n\r\nexport default function Portfolio({ projects = [] }) {\r\n\treturn (\r\n\t\t<section id=\"portfolio\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"twelve columns collapsed\">\r\n\t\t\t\t\t<h1>Check Out Some of My Projects.</h1>\r\n\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tid=\"portfolio-wrapper\"\r\n\t\t\t\t\t\tclassName=\"bgrid-quarters s-bgrid-thirds cf\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{projects.map(function renderProject(p) {\r\n\t\t\t\t\t\t\treturn <Project data={p} />\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}\r\n","import React from 'react'\n\nimport { headerData, aboutData } from './data'\nimport { projects } from './mockData'\n\nimport Header from './components/Header'\nimport About from './components/About'\nimport Portfolio from './components/Portfolio'\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header {...headerData} />\n\t\t\t<About {...aboutData} />\n\t\t\t<Portfolio projects={projects} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}